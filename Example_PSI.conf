[global]
task        = UserTask           ; Job uses user written scripts
backend     = local              ; Send to local batch system
workdir = ~/grid-control-examples/work.Example_PSI/ ; temporary directory where grid-control will operate, jobs will NOT run here

[jobs]
wall time   = 1:00               ; Jobs will take max 1h

[UserTask]
executable  = Example_PSI.sh ; Name of the script
arguments   = arg1 arg2 arg3     ; Arguments for the executable
dataset splitter = FileBoundarySplitter ; run jobs on a fixed number of files, could also be fixed number of events per job 
input files = script.py
output files = out.txt
files per job = 5
dataset =
        data1.dat
        data2.dat
; a way for us to configure the name of the job on the batch system. GC_TASK_ID is a unique string
job name generator = ConfigurableJobName
job name = Example_PSI.@GC_TASK_ID@

[parameters]                      ; This section defines the parameter space
repeat       = 1                  ; How many times each parameter space point should be sampled
parameters   = MY_SETTING         ; The parameter space is defined by a single parameter "MY_SETTING"
MY_SETTING   = val1               ; you could also scan across a set of parameters, e.g. "val1 val2"
